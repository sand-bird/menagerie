{
  "condition": {
    "anyOf": [
      {
        "$ref": "#/condition/boolean"
      },
      {
        "type": "object",
        "maxProperties": 1,
        "properties": {
          "and": {
            "$ref": "#/condition/boolean"
          },
          "or": {
            "$ref": "#/condition/boolean"
          },
          "==": {
            "$ref": "#/condition/comparator"
          },
          "<": {
            "$ref": "#/condition/comparator"
          },
          ">": {
            "$ref": "#/condition/comparator"
          },
          "<=": {
            "$ref": "#/condition/comparator"
          },
          ">=": {
            "$ref": "#/condition/comparator"
          },
          "in": {
            "$ref": "#/condition/comparator"
          }
        },
        "additionalProperties": false
      }
    ],
    "boolean": {
      "type": "array",
      "minItems": 2,
      "items": {
        "$ref": "#"
      }
    },
    "comparator": {
      "type": "array",
      "minItems": 2,
      "maxItems": 2,
      "items": {
        "$ref": "#/condition/argument"
      }
    },
    "argument": {
      "anyOf": [
        {
          "type": "string"
        },
        {
          "type": "number"
        },
        {
          "type": "object",
          "maxProperties": 1,
          "properties": {
            "filter": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": [
                {
                  "type": "string"
                },
                {
                  "$ref": "#/condition"
                }
              ]
            },
            "map": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "type": "string"
              }
            },
            "get": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": {
                "type": "string"
              }
            },
            "mod": {
              "type": "array",
              "minItems": 2,
              "maxItems": 2,
              "items": [
                {
                  "type": [
                    "string",
                    "number"
                  ]
                },
                {
                  "type": "integer"
                }
              ]
            },
            "additionalProperties": false
          }
        }
      ]
    }
  },
  "weight": {
    "type": "integer",
    "maxValue": 8,
    "minValue": 1
  },
  "percentage": {
    "type": "number",
    "minValue": 0,
    "maxValue": 1
  },
  "text": {
    "$comment": "Translatable text; object mapping location codes to text in that language",
    "type": "object",
    "propertyNames": {
      "$comment": "It would be more correct to provide an enum of valid location codes, but this is fine for now",
      "pattern": "^[a-z]{2}$"
    },
    "additionalProperties": {
      "type": "string"
    }
  },
  "text16": {
    "$ref": "#/text",
    "additionalProperties": {
        "maxLength": 16
      }
  },
  "text32": {
    "$ref": "#/text",
    "additionalProperties": {
        "maxLength": 32
      }
  },
  "text128": {
    "$ref": "#/text",
    "additionalProperties": {
        "maxLength": 128
      }
  },
  "id": {
    "type": "string",
    "maxLength": 32,
    "pattern": "^[\\w-]+$",
    "$comment": "Letters only, no spaces (hyphens and underscores ok)"
  },
  "file": {
    "$comment": "we should validate that the file exists, if possible",
    "type": "string",
    "format": "filepath"
  },
  "partialVector": {
    "$comment": "A vector whose properties are optional because they will be defaulted at runtime.",
    "type": "object",
    "propertyNames": {
      "enum": ["x", "y"]
    },
    "additionalProperties": {
      "type": "number"
    }
  },
  "partialVectori": {
    "$ref": "#/partialVector",
    "additionalProperties": {
      "type": "integer"
    }
  },
  "vector": {
    "$comment": "A vector where both x and y must be specified.",
    "$ref": "#/partialVector",
    "required": ["x", "y"]
  },
  "vectori": {
    "$ref": "#/vector",
    "additionalProperties": {
      "type": "integer"
    }
  },
  "animatedSprite": {
    "type": "object",
    "required": [
      "spritesheet",
      "frames",
      "fps"
    ],
    "properties": {
      "spritesheet": {
        "ref": "definitions/file"
      },
      "frames": {
        "type": "integer",
        "minimum": 1
      },
      "fps": {
        "type": "number",
        "minimum": 0
      },
      "loop": {
        "type": "boolean",
        "default": "true"
      },
      "offset": {
        "$ref": "#/partialVector"
      }
    }
  }
}
